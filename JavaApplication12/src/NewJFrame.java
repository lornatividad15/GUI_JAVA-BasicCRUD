/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;



/**
 *
 * @author acer
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        DBConnection();
        loadTable();
    }
    static String tableID;
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    private void loadTable(){
        try {
            int count;
            pst = con.prepareStatement("SELECT * FROM sample_table");
            rs = pst.executeQuery();
            ResultSetMetaData rss = (ResultSetMetaData) rs.getMetaData();
            count = rss.getColumnCount();
            
            DefaultTableModel df =(DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                for(int a=1; a<=count; a++){
                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("FirstName"));
                    v2.add(rs.getString("MiddleName"));
                    v2.add(rs.getString("LastName"));
                    v2.add(rs.getString("Gender"));
                    v2.add(rs.getString("ContactNo"));
                    v2.add(rs.getString("Blk"));
                    v2.add(rs.getString("Lt"));
                    v2.add(rs.getString("NoofResidents"));
                }
                df.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        houseSP = new javax.swing.JSpinner();
        registerBTN = new javax.swing.JButton();
        updateBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        lnameTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        contactTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        maleRB = new javax.swing.JRadioButton();
        femaleRB = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        blockCB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fnameTF = new javax.swing.JTextField();
        mnameTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lotTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(241, 226, 221));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("Homeowner Association Management System");

        jTable1.setBackground(new java.awt.Color(255, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Owner ID", "Firstname", "Middlename", "Lastname", "Gender", "Contact No.", "Block", "Lot", "No. of Residents"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 204, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("House resident:");

        houseSP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        houseSP.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        registerBTN.setBackground(new java.awt.Color(204, 255, 204));
        registerBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        registerBTN.setText("REGISTER");
        registerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBTNActionPerformed(evt);
            }
        });

        updateBTN.setBackground(new java.awt.Color(153, 204, 255));
        updateBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateBTN.setText("UPDATE");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        deleteBTN.setBackground(new java.awt.Color(255, 163, 163));
        deleteBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deleteBTN.setText("DELETE");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        lnameTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Lastname:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Contact No.:");

        contactTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Gender:");

        buttonGroup1.add(maleRB);
        maleRB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        maleRB.setText("Male");

        buttonGroup1.add(femaleRB);
        femaleRB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        femaleRB.setText("Female");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setText("House Information:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Block:");

        blockCB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        blockCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Block 1", "Block 2", "Block 3", "Block 4", "Block 5", "Block 6", "Block 7", "Block 8", "Block 9" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Homeowner Personal Information");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Firstname:");

        fnameTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mnameTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Middlename:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Lot:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(fnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(mnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(contactTF, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(maleRB)
                                        .addGap(99, 99, 99)
                                        .addComponent(femaleRB)))
                                .addGap(74, 74, 74)))
                        .addGap(117, 117, 117)
                        .addComponent(registerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 928, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(685, 685, 685)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(houseSP, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(blockCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lotTF, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 128, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(houseSP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blockCB, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lotTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(mnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contactTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maleRB)
                            .addComponent(femaleRB)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(registerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(rootPane, "Are you sure that you want to delete this record?", "Warning", JOptionPane.YES_NO_OPTION);
        System.out.println(tableID);
        if (confirm == 0){
            try{
                pst = con.prepareStatement("DELETE FROM sample_table WHERE ID=?");
                pst.setString(1, tableID);

                int resp = pst.executeUpdate();

                if (resp == 1){
                    JOptionPane.showMessageDialog(this, "Record has been Deleted Successfully!");

                    // Check if table is now empty
                    Statement checkStmt = con.createStatement();
                    ResultSet rs = checkStmt.executeQuery("SELECT COUNT(*) AS total FROM sample_table");
                    if (rs.next() && rs.getInt("total") == 0) {
                        // If empty, reset auto-increment
                        Statement resetStmt = con.createStatement();
                        resetStmt.executeUpdate("ALTER TABLE sample_table AUTO_INCREMENT = 1");
                    }

                    // Reload table and clear fields
                    loadTable();
                    fnameTF.setText("");
                    mnameTF.setText("");
                    lnameTF.setText("");
                    contactTF.setText("");
                    maleRB.setSelected(false);
                    femaleRB.setSelected(false);
                    houseSP.setValue(0);
                    blockCB.setSelectedIndex(0);
                    lotTF.setText("");
                    buttonGroup1.clearSelection();
                }
            }catch (SQLException ex){
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // TODO add your handling code here:
        try{
            String fname = fnameTF.getText();
            String mname = mnameTF.getText();
            String lname = lnameTF.getText();
            String lot = lotTF.getText();
            String contact = contactTF.getText();

            String gender = "Null";
            if(maleRB.isSelected()){
                gender = "Male";
            }else if (femaleRB.isSelected()){
                gender = "Female";
            }else{
                gender = "Null";
            }

            String block = "Null";
            block = String.valueOf(blockCB.getSelectedItem());
            if(block.equals("Block 1")){
                block = "Block 1";
            }else if(block.equals("Block 2")){
                block = "Block 2";
            }else if(block.equals("Block 3")){
                block = "Block 3";
            }else if(block.equals("Block 4")){
                block = "Block 4";
            }else if(block.equals("Block 5")){
                block = "Block 5";
            }else if(block.equals("Block 6")){
                block = "Block 6";
            }else if(block.equals("Block 7")){
                block = "Block 7";
            }else if(block.equals("Block 8")){
                block = "Block 8";
            }else if(block.equals("Block 9")){
                block = "Block 9";
            }else{
                block = "Null";
            }

            int resident = 0;
            resident = Integer.parseInt(String.valueOf(houseSP.getValue()));
            int confirmm = JOptionPane.showConfirmDialog(rootPane, "Are you sure that you want to update this record?", "WARNING", JOptionPane.YES_NO_OPTION);
            System.out.println(tableID);
            if (confirmm == 0){
                pst = con.prepareStatement("UPDATE sample_table SET FirstName=?, MiddleName=?, LastName=?, Gender=?, ContactNo=?, Blk=?, Lt=?, NoofResidents=? WHERE ID=?");
                pst.setString(1, fname);
                pst.setString(2, mname);
                pst.setString(3, lname);
                pst.setString(4, gender);
                pst.setString(5, contact);
                pst.setString(6, block);
                pst.setString(7, lot);
                pst.setInt(8, resident);
                pst.setString(9, tableID);

                int resp = pst.executeUpdate();

                if (resp == 1){
                    JOptionPane.showMessageDialog(this, "Record has been updated successfully!");
                    loadTable();
                    fnameTF.setText("");
                    mnameTF.setText("");
                    lnameTF.setText("");
                    contactTF.setText("");
                    maleRB.setSelected(false);
                    femaleRB.setSelected(false);
                    houseSP.setValue(0);
                    blockCB.setSelectedIndex(0);
                    lotTF.setText("");
                    buttonGroup1.clearSelection();
                }
            }
        }catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBTNActionPerformed

    private void registerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBTNActionPerformed
        try {
            // TODO add your handling code here:
            String fname = fnameTF.getText();
            String mname = mnameTF.getText();
            String lname = lnameTF.getText();
            String lot = lotTF.getText();
            String contact = contactTF.getText();

            String gender = " ";
            if(maleRB.isSelected()){
                gender = "Male";
            }else if (femaleRB.isSelected()){
                gender = "Female";
            }else{
                gender = "Null";
            }

            String block = "Null";
            block = String.valueOf(blockCB.getSelectedItem());
            if(block.equals("Block 1")){
                block = "Block 1";
            }else if(block.equals("Block 2")){
                block = "Block 2";
            }else if(block.equals("Block 3")){
                block = "Block 3";
            }else if(block.equals("Block 4")){
                block = "Block 4";
            }else if(block.equals("Block 5")){
                block = "Block 5";
            }else if(block.equals("Block 6")){
                block = "Block 6";
            }else if(block.equals("Block 7")){
                block = "Block 7";
            }else if(block.equals("Block 8")){
                block = "Block 8";
            }else if(block.equals("Block 9")){
                block = "Block 9";
            }else{
                block = "Null";
            }

            int resident = 0;
            resident = Integer.parseInt(String.valueOf(houseSP.getValue()));

            pst = con.prepareStatement("INSERT INTO sample_table (FirstName, MiddleName, LastName, Gender, ContactNo, Blk, Lt, NoofResidents) VALUES(?, ?, ?, ?, ?, ?, ?, ?)");
            pst.setString(1, fname);
            pst.setString(2, mname);
            pst.setString(3, lname);
            pst.setString(4, gender);
            pst.setString(5, contact);
            pst.setString(6, block);
            pst.setString(7, lot);
            pst.setInt(8, resident);

            int resp = pst.executeUpdate();
            if (resp == 1){
                loadTable();
                JOptionPane.showMessageDialog(rootPane, "Owner Registered Successfully");
                fnameTF.setText("");
                mnameTF.setText("");
                lnameTF.setText("");
                contactTF.setText("");
                maleRB.setSelected(false);
                femaleRB.setSelected(false);
                houseSP.setValue(0);
                blockCB.setSelectedIndex(0);
                lotTF.setText("");
                buttonGroup1.clearSelection();
            }
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_registerBTNActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            // TODO add your handling code here:
            int row = jTable1.getSelectedRow();
            tableID = String.valueOf(jTable1.getValueAt(row, 0));

            pst = con.prepareStatement("SELECT * FROM sample_table WHERE ID=?");
            pst.setString(1, String.valueOf(tableID));

            rs = pst.executeQuery();

            if(rs.next()== true){
                fnameTF.setText(rs.getString("FirstName"));
                mnameTF.setText(rs.getString("MiddleName"));
                lnameTF.setText(rs.getString("LastName"));
                contactTF.setText(rs.getString("ContactNo"));
                lotTF.setText(rs.getString("Lt"));

                String gender = rs.getString("Gender");
                if (gender.equalsIgnoreCase("Male")){
                    maleRB.setSelected(true);
                }else if (gender.equalsIgnoreCase("Female")){
                    femaleRB.setSelected(true);
                }

                blockCB.setSelectedItem(rs.getString("Blk"));
                houseSP.setValue(rs.getInt("NoofResidents"));
            }

        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        fnameTF.setText("");
        mnameTF.setText("");
        lnameTF.setText("");
        contactTF.setText("");
        maleRB.setSelected(false);
        femaleRB.setSelected(false);
        houseSP.setValue(0);
        blockCB.setSelectedIndex(0);
        lotTF.setText("");
        buttonGroup1.clearSelection();
        jTable1.clearSelection();
    }//GEN-LAST:event_jPanel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    private void DBConnection(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost/homeowner","root","");
            } catch (SQLException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> blockCB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField contactTF;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JRadioButton femaleRB;
    private javax.swing.JTextField fnameTF;
    private javax.swing.JSpinner houseSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lnameTF;
    private javax.swing.JTextField lotTF;
    private javax.swing.JRadioButton maleRB;
    private javax.swing.JTextField mnameTF;
    private javax.swing.JButton registerBTN;
    private javax.swing.JButton updateBTN;
    // End of variables declaration//GEN-END:variables
}
